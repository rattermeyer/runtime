---
- name: install slapd
  apt:
    name: slapd
  state: present

- name: datadir
  file:
    state: directory
    path: '{{ openldap_datadir }}'
    owner: '{{ openldap_user }}'
    group: '{{ openldap_group }}'
    mode: '0700'
  tags: config, openldap

# ssl/tls
- block:
  - name: ssl dir
    file:
      path: '{{ openldap_confdir }}/ssl'
      state: directory
      group: '{{ openldap_group }}'
      mode: '0770'
  - name: tls cert/key
    copy:
      src: 'openldap/{{ item }}'
      dest: '{{ openldap_confdir }}/ssl/{{ item }}'
      group: '{{ openldap_group }}'
      mode: '0640'
    with_items:
      - '{{ openldap_tls_cert }}'
      - '{{ openldap_tls_key }}'
  - name: ssl ca file
    copy:
      src: '{{ openldap_tls_cacert | default(ldap_cacert) | default(tls_cacert) }}'
      dest: '{{ openldap_confdir }}/ca.crt'
    when: 'openldap_tls_cacert != "" or ldap_cacert != "" or tls_cacert != ""'
  when: 'openldap_tls_cert is defined and openldap_tls_cert != ""'
  tags: config, ssl, openldap

- name: openldap schemas
  copy:
    src: '{{ item }}'
    dest: '{{ openldap_confdir }}/schema/'
    group: '{{ openldap_group }}'
    mode: '0644'
  with_fileglob:
    - '{{ playbook_dir }}/files/openldap/schema/*.schema'
  failed_when: False
  tags: openldap, config, schemas

- name: slapd includes
  template:
    src: 'files/openldap/{{ item }}'
    dest: '{{ openldap_confdir }}/{{ item }}'
    group: '{{ openldap_group }}'
    mode: '0640'
  with_items: "{{ openldap_bases.includes | default([]) }}"
  tags: config, openldap
  notify: restart slapd

- name: configure slapd services
  lineinfile:
    path: "/etc/default/slapd"
    line: 'SLAPD_SERVICES="ldap:/// ldaps:/// ldapi:///"'
    regexp: '^SLAPD_SERVICES='
  notify: restart slapd

- name: test for slapd backends modules (for slapd.conf.j2)
  stat:
    path: '{{ openldap_modsdir }}/back_{{ item }}.la'
  with_items: '{{ openldap_bases.database | default([]) | union([openldap_db_engine]) | unique }}'
  register: openldap_dbmodules_stat
  failed_when: False
  when: 'openldap_modsdir != ""'
  tags: config, openldap

- set_fact:
    openldap_dbmodules: "{{ openldap_dbmodules_stat | json_query(\"results[?stat.exists].item\") }}"
  tags: tst

- debug:
    var: openldap_dbmodules_stat
  tags: tst

- name: ensure ldap dev modules installed
  apt:
    name: "{{item}}"
  with_items:
    - libsasl2-dev 
    - python-dev 
    - libldap2-dev 
    - libssl-dev
    - python-pip
- name: ensure ldap module installed
  pip:
    name: python-ldap
  become: True

- name: start slapd
  service:
    name: '{{ openldap_slapd_service_name }}'
    enabled: True
    state: started
  tags: config, openldap

- name: wait for port
  wait_for:
    port: 389

- name: add memberof overlay
  ldap_attr:
    dn: cn=module{0},cn=config
    name: "{{ item.name }}"
    values: "{{ item.ldap_values }}"
    state: "{{ item.state }}"
  with_items:
  - { name: "olcModuleLoad", ldap_values: "{1}memberof", state: present }
  - { name: "olcModuleLoad", ldap_values: "{2}refint", state: present }
  - { name: "olcModuleLoad", ldap_values: "{3}pw-sha2", state: present }
  tags: rtcconfig

- name: config global settings
  ldap_attr:
    dn: "cn=config"
    name: "{{item.name}}"
    values: "{{item.ldap_values}}"
    state: "{{ item.state }}"
  with_items:
    - { name: olcPasswordHash, ldap_values: ["{SSHA512}", "{SHA512}"], state: exact }
  tags: rtcconfig

- name: modify config database
  ldap_attr:
    dn: "olcDatabase={0}config,cn=config"
    name: "{{item.name}}"
    values: "{{item.ldap_values}}"
    state: "{{ item.state }}"
  with_items:
    - { name: olcRootDN, ldap_values: ["cn=admin,cn=config"], state: exact }
    - { name: olcRootPW, ldap_values: ["secret"], state: exact }
  tags: rtcconfig

- name: Configure directory number 1 for opendp.org
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: "{{ item.name }}"
    values: "{{ item.ldap_values }}"
    state: "{{ item.state }}"
  with_items:
  - { name: "olcSuffix", ldap_values: ["dc=opendp,dc=org"], state: exact }
  - { name: "olcRootDN", ldap_values: ["cn=admin,dc=opendp,dc=org"], state: exact }
  - { name: "olcRootPW", ldap_values: ["secret"], state: exact }
  - { name: "olcDbDirectory", ldap_values: ["/var/lib/ldap"], state: exact }
  tags: rtcconfig

- name: configure refint
  ldap_entry:
    dn: olcOverlay={2}refint,olcDatabase={1}mdb,cn=config
    objectClass:
    - olcConfig
    - olcRefintConfig
    - olcOverlayConfig
    - top
    attributes:
      olcOverlay: refint
      olcRefintAttribute: "memberof member manager owner"
  tags: rtcconfig

- name: configure memberof
  ldap_entry:
    dn: olcOverlay={1}memberof,olcDatabase={1}mdb,cn=config
    objectClass:
    - olcConfig
    - olcMemberOf
    - olcOverlayConfig
    - top
    attributes:
      olcOverlay: memberof
      olcMemberOfDangling: ignore
      olcMemberOfGroupOC: groupOfNames
      olcMemberOfMemberAD: member
      olcMemberOfMemberOfAD: memberOf
      olcMemberOfRefInt: TRUE
  tags: rtcconfig
