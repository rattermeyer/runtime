; This file lists the default values used by Gitea
; Copy required sections to your own app.ini (default is custom/conf/app.ini)
; and modify as needed.

; see https://docs.gitea.io/en-us/config-cheat-sheet/ for additional documentation.

; App name that shows in every page title
APP_NAME = {{ APP_NAME }}
; Change it if you run locally
RUN_USER = {{ RUN_USER }}
; Either "dev", "prod" or "test", default is "dev"
RUN_MODE = {{ RUN_MODE }}

[repository]
ROOT = {{ repository_ROOT }}
SCRIPT_TYPE = {{ repository_SCRIPT_TYPE }}
; Default ANSI charset
ANSI_CHARSET = {{ repository_ANSI_CHARSET }}
; Force every new repository to be private
FORCE_PRIVATE = {{ repository_FORCE_PRIVATE }}
; Default privacy setting when creating a new repository, allowed values: last, private, public. Default is last which means the last setting used.
DEFAULT_PRIVATE = {{ repository_DEFAULT_PRIVATE }}
; Global limit of repositories per user, applied at creation time. -1 means no limit
MAX_CREATION_LIMIT = {{ repository_MAX_CREATION_LIMIT }}
; Mirror sync queue length, increase if mirror syncing starts hanging
MIRROR_QUEUE_LENGTH = {{ repository_MIRROR_QUEUE_LENGTH }}
; Patch test queue length, increase if pull request patch testing starts hanging
PULL_REQUEST_QUEUE_LENGTH = {{ repository_PULL_REQUEST_QUEUE_LENGTH }}
; Preferred Licenses to place at the top of the List
; The name here must match the filename in conf/license or custom/conf/license
PREFERRED_LICENSES = {{ repository_PREFERRED_LICENSES }}
; Disable the ability to interact with repositories using the HTTP protocol
DISABLE_HTTP_GIT = {{ repository_DISABLE_HTTP_GIT }}
; Force ssh:// clone url instead of scp-style uri when default SSH port is used
USE_COMPAT_SSH_URI = {{ repository_USE_COMPAT_SSH_URI }}

[repository.editor]
; List of file extensions for which lines should be wrapped in the CodeMirror editor
; Separate extensions with a comma. To line wrap files without an extension, just put a comma
LINE_WRAP_EXTENSIONS = {{ repository_editor_LINE_WRAP_EXTENSIONS }}
; Valid file modes that have a preview API associated with them, such as api/v1/markdown
; Separate the values by commas. The preview tab in edit mode won't be displayed if the file extension doesn't match
PREVIEWABLE_FILE_MODES = {{ repository_editor_PREVIEWABLE_FILE_MODES }}

[repository.local]
; Path for local repository copy. Defaults to `tmp/local-repo`
LOCAL_COPY_PATH = {{ repository_LOCAL_COPY_PATH }}
; Path for local wiki copy. Defaults to `tmp/local-wiki`
LOCAL_WIKI_PATH = {{ repository_LOCAL_WIKI_PATH }}

[repository.upload]
; Whether repository file uploads are enabled. Defaults to `true`
ENABLED = {{ repository_upload_ENABLED }}
; Path for uploads. Defaults to `data/tmp/uploads` (tmp gets deleted on gitea restart)
TEMP_PATH = {{ repository_upload_TEMP_PATH }}
; One or more allowed types, e.g. image/jpeg|image/png. Nothing means any file type
ALLOWED_TYPES = {{ repository_upload_ALLOWED_TYPES}}
; Max size of each file in megabytes. Defaults to 3MB
FILE_MAX_SIZE = {{ repository_upload_FILE_MAX_SIZE }}
; Max number of files per upload. Defaults to 5
MAX_FILES = {{ repository_upload_MAX_FILES }}

[repository.pull-request]
; List of prefixes used in Pull Request title to mark them as Work In Progress
WORK_IN_PROGRESS_PREFIXES={{ repository_pull_request_WORK_IN_PROGRESS_PREFIXES }}

[ui]
; Number of repositories that are displayed on one explore page
EXPLORE_PAGING_NUM = {{ ui_EXPLORE_PAGING_NUM }}
; Number of issues that are displayed on one page
ISSUE_PAGING_NUM = {{ ui_ISSUE_PAGING_NUM }}
; Number of maximum commits displayed in one activity feed
FEED_MAX_COMMIT_NUM = {{ ui_FEED_MAX_COMMIT_NUM }}
; Number of maximum commits displayed in commit graph.
GRAPH_MAX_COMMIT_NUM = {{ ui_GRAPH_MAX_COMMIT_NUM }}
; Number of line of codes shown for a code comment
CODE_COMMENT_LINES = {{ ui_CODE_COMMENT_LINES }}
; Value of `theme-color` meta tag, used by Android >= 5.0
; An invalid color like "none" or "disable" will have the default style
; More info: https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android
THEME_COLOR_META_TAG = {{ ui_THEME_COLOR_META_TAG }}
; Max size of files to be displayed (default is 8MiB)
MAX_DISPLAY_FILE_SIZE = {{ ui_MAX_DISPLAY_FILE_SIZE }}
; Whether the email of the user should be shown in the Explore Users page
SHOW_USER_EMAIL = {{ ui_SHOW_USER_EMAIL }}
; Set the default theme for the Gitea install
DEFAULT_THEME = {{ ui_DEFAULT_THEME }}

[ui.admin]
; Number of users that are displayed on one page
USER_PAGING_NUM = {{ ui_admin_USER_PAGING_NUM }}
; Number of repos that are displayed on one page
REPO_PAGING_NUM = {{ ui_admin_REPO_PAGING_NUM }}
; Number of notices that are displayed on one page
NOTICE_PAGING_NUM = {{ ui_admin_NOTICE_PAGING_NUM }}
; Number of organizations that are displayed on one page
ORG_PAGING_NUM = {{ ui_admin_ORG_PAGING_NUM }}

[ui.user]
; Number of repos that are displayed on one page
REPO_PAGING_NUM = {{ ui_user_REPO_PAGING_NUM }}

[ui.meta]
AUTHOR = {{ ui_meta_AUTHOR }}
DESCRIPTION = {{ ui_meta_DESCRIPTION }}
KEYWORDS = {{ ui_meta_KEYWORDS }}

[markdown]
; Enable hard line break extension
ENABLE_HARD_LINE_BREAK = {{ markdown_ENABLE_HARD_LINE_BREAK }}
; List of custom URL-Schemes that are allowed as links when rendering Markdown
; for example git,magnet
CUSTOM_URL_SCHEMES =
; List of file extensions that should be rendered/edited as Markdown
; Separate the extensions with a comma. To render files without any extension as markdown, just put a comma
FILE_EXTENSIONS = {{ markdown_FILE_EXTENSIONS }}

[server]
; The protocol the server listens on. One of 'http', 'https', 'unix' or 'fcgi'.
PROTOCOL = {{ server_PROTOCOL }}
DOMAIN = {{ server_DOMAIN }}
ROOT_URL = {{ server_ROOT_URL }}
; The address to listen on. Either a IPv4/IPv6 address or the path to a unix socket.
HTTP_ADDR = {{ server_HTTP_ADDR }}
HTTP_PORT = {{ server_HTTP_PORT }}
; If REDIRECT_OTHER_PORT is true, and PROTOCOL is set to https an http server
; will be started on PORT_TO_REDIRECT and it will redirect plain, non-secure http requests to the main
; ROOT_URL.  Defaults are false for REDIRECT_OTHER_PORT and 80 for
; PORT_TO_REDIRECT.
REDIRECT_OTHER_PORT = {{ server_REDIRECT_OTHER_PORT }}
PORT_TO_REDIRECT = {{ server_PORT_TO_REDIRECT }}
; Permission for unix socket
UNIX_SOCKET_PERMISSION = {{ server_UNIX_SOCKET_PERMISSION }}
; Local (DMZ) URL for Gitea workers (such as SSH update) accessing web service.
; In most cases you do not need to change the default value.
; Alter it only if your SSH server node is not the same as HTTP node.
; Do not set this variable if PROTOCOL is set to 'unix'.
LOCAL_ROOT_URL = {{ server_LOCAL_ROOT_URL }}
; Disable SSH feature when not available
DISABLE_SSH = {{ server_DISABLE_SSH }}
; Whether to use the builtin SSH server or not.
START_SSH_SERVER = {{ server_START_SSH_SERVER }}
; Username to use for the builtin SSH server. If blank, then it is the value of RUN_USER.
BUILTIN_SSH_SERVER_USER =
; Domain name to be exposed in clone URL
SSH_DOMAIN = {{ server_SSH_DOMAIN }}
; THe network interface the builtin SSH server should listen on
SSH_LISTEN_HOST =
; Port number to be exposed in clone URL
SSH_PORT = {{ server_SSH_PORT }}
; The port number the builtin SSH server should listen on
SSH_LISTEN_PORT = {{ server_SSH_LISTEN_PORT }}
; Root path of SSH directory, default is '~/.ssh', but you have to use '/home/git/.ssh'.
SSH_ROOT_PATH =
; For the built-in SSH server, choose the ciphers to support for SSH connections,
; for system SSH this setting has no effect
SSH_SERVER_CIPHERS = {{ server_SSH_SERVER_CIPHERS }}
; For the built-in SSH server, choose the key exchange algorithms to support for SSH connections,
; for system SSH this setting has no effect
SSH_SERVER_KEY_EXCHANGES = {{ server_SSH_SERVER_KEY_EXCHANGES }}
; For the built-in SSH server, choose the MACs to support for SSH connections,
; for system SSH this setting has no effect
SSH_SERVER_MACS = {{ server_SSH_SERVER_MACS }}
; Directory to create temporary files in when testing public keys using ssh-keygen,
; default is the system temporary directory.
SSH_KEY_TEST_PATH =
; Path to ssh-keygen, default is 'ssh-keygen' which means the shell is responsible for finding out which one to call.
SSH_KEYGEN_PATH = {{ server_SSH_KEYGEN_PATH }}
; Enable SSH Authorized Key Backup when rewriting all keys, default is true
SSH_BACKUP_AUTHORIZED_KEYS = {{ server_SSH_BACKUP_AUTHORIZED_KEYS }}
; Enable exposure of SSH clone URL to anonymous visitors, default is false
SSH_EXPOSE_ANONYMOUS = {{ server_SSH_EXPOSE_ANONYMOUS }}
; Indicate whether to check minimum key size with corresponding type
MINIMUM_KEY_SIZE_CHECK = {{ server_MINIMUM_KEY_SIZE_CHECK }}
; Disable CDN even in "prod" mode
OFFLINE_MODE = {{ server_OFFLINE_MODE }}
DISABLE_ROUTER_LOG = {{ server_DISABLE_ROUTER_LOG }}
; Generate steps:
; $ ./gitea cert -ca=true -duration=8760h0m0s -host=myhost.example.com
;
; Or from a .pfx file exported from the Windows certificate store (do
; not forget to export the private key):
; $ openssl pkcs12 -in cert.pfx -out cert.pem -nokeys
; $ openssl pkcs12 -in cert.pfx -out key.pem -nocerts -nodes
CERT_FILE = {{ server_CERT_FILE }}
KEY_FILE = {{ server_KEY_FILE }}
; Root directory containing templates and static files.
; default is the path where Gitea is executed
STATIC_ROOT_PATH =
; Default path for App data
APP_DATA_PATH = {{ server_APP_DATA_PATH }}
; Application level GZIP support
ENABLE_GZIP = {{ server_ENABLE_GZIP }}
; Application profiling (memory and cpu)
; For "web" command it listens on localhost:6060
; For "serve" command it dumps to disk at PPROF_DATA_PATH as (cpuprofile|memprofile)_<username>_<temporary id>
ENABLE_PPROF = {{ server_ENABLE_PPROF }}
; PPROF_DATA_PATH, use an absolute path when you start gitea as service
PPROF_DATA_PATH = {{ server_PPROF_DATA_PATH }}
; Landing page, can be "home", "explore", or "organizations"
LANDING_PAGE = {{ server_LANDING_PAGE }}
; Enables git-lfs support. true or false, default is false.
LFS_START_SERVER = {{ server_LFS_START_SERVER }}
; Where your lfs files reside, default is data/lfs.
LFS_CONTENT_PATH = {{ server_LFS_CONTENT_PATH }}
; LFS authentication secret, change this yourself
LFS_JWT_SECRET =
; LFS authentication validity period (in time.Duration), pushes taking longer than this may fail.
LFS_HTTP_AUTH_EXPIRY = {{ server_LFS_HTTP_AUTH_EXPIRY }}

; Define allowed algorithms and their minimum key length (use -1 to disable a type)
[ssh.minimum_key_sizes]
ED25519 = {{ ssh_minimum_key_sizes_ED25519 }}
ECDSA = {{ ssh_minimum_key_sizes_ECDSA }}
RSA = {{ ssh_minimum_key_sizes_RSA }}
DSA = {{ ssh_minimum_key_sizes_DSA }}

[database]
; Either "mysql", "postgres", "mssql" or "sqlite3", it's your choice
DB_TYPE = {{ database_DB_TYPE }}
HOST = {{ database_HOST }}
NAME = {{ database_NAME }}
USER = {{ database_USER }}
; Use PASSWD =
PASSWD = {{ database_PASSWD }}
; For Postgres, either "disable" (default), "require", or "verify-full"
; For MySQL, either "false" (default), "true", or "skip-verify"
SSL_MODE = {{ database_SSL_MODE }}
; For "sqlite3" and "tidb", use an absolute path when you start gitea as service
PATH = {{ database_PATH }}
; For "sqlite3" only. Query timeout
SQLITE_TIMEOUT = {{ database_SQLITE_TIMEOUT }}
; For iterate buffer, default is 50
ITERATE_BUFFER_SIZE = {{ database_ITERATE_BUFFER_SIZE }}
; Show the database generated SQL
LOG_SQL = {{ database_LOG_SQL }}

[indexer]
ISSUE_INDEXER_PATH = {{ indexer_ISSUE_INDEXER_PATH }}
; repo indexer by default disabled, since it uses a lot of disk space
REPO_INDEXER_ENABLED = {{ indexer_REPO_INDEXER_ENABLED }}
REPO_INDEXER_PATH = {{ indexer_REPO_INDEXER_PATH }}
UPDATE_BUFFER_LEN = {{ indexer_UPDATE_BUFFER_LEN }}
MAX_FILE_SIZE = {{ indexer_MAX_FILE_SIZE }}

[admin]
; Disallow regular (non-admin) users from creating organizations.
DISABLE_REGULAR_ORG_CREATION = {{ admin_DISABLE_REGULAR_ORG_CREATION }}

[security]
; Whether the installer is disabled
INSTALL_LOCK = {{ security_INSTALL_LOCK }}
; !!CHANGE THIS TO KEEP YOUR USER DATA SAFE!!
SECRET_KEY = {{ security_SECRET_KEY }}
; How long to remember that an user is logged in before requiring relogin (in days)
LOGIN_REMEMBER_DAYS = {{ security_LOGIN_REMEMBER_DAYS }}
COOKIE_USERNAME = {{ security_COOKIE_USERNAME }}
COOKIE_REMEMBER_NAME = {{ security_COOKIE_REMEMBER_NAME }}
; Reverse proxy authentication header name of user name
REVERSE_PROXY_AUTHENTICATION_USER = {{ security_REVERSE_PROXY_AUTHENTICATION_USER }}
; The minimum password length for new Users
MIN_PASSWORD_LENGTH = {{ security_MIN_PASSWORD_LENGTH }}
; True when users are allowed to import local server paths
IMPORT_LOCAL_PATHS = {{ security_IMPORT_LOCAL_PATHS }}
; Prevent all users (including admin) from creating custom git hooks
DISABLE_GIT_HOOKS = {{ security_DISABLE_GIT_HOOKS }}

[openid]
;
; OpenID is an open, standard and decentralized authentication protocol.
; Your identity is the address of a webpage you provide, which describes
; how to prove you are in control of that page.
;
; For more info: https://en.wikipedia.org/wiki/OpenID
;
; Current implementation supports OpenID-2.0
;
; Tested to work providers at the time of writing:
;  - Any GNUSocial node (your.hostname.tld/username)
;  - Any SimpleID provider (http://simpleid.koinic.net)
;  - http://openid.org.cn/
;  - openid.stackexchange.com
;  - login.launchpad.net
;  - <username>.livejournal.com
;
; Whether to allow signin in via OpenID
ENABLE_OPENID_SIGNIN = {{ openid_ENABLE_OPENID_SIGNIN }}
; Whether to allow registering via OpenID
; Do not include to rely on rhw DISABLE_REGISTRATION setting
;ENABLE_OPENID_SIGNUP =
; Allowed URI patterns (POSIX regexp).
; Space separated.
; Only these would be allowed if non-blank.
; Example value: trusted.domain.org trusted.domain.net
WHITELISTED_URIS =
; Forbidden URI patterns (POSIX regexp).
; Space separated.
; Only used if WHITELISTED_URIS is blank.
; Example value: loadaverage.org/badguy stackexchange.com/.*spammer
BLACKLISTED_URIS =

[service]
; Time limit to confirm account/email registration
ACTIVE_CODE_LIVE_MINUTES = {{ service_ACTIVE_CODE_LIVE_MINUTES }}
; Time limit to perform the reset of a forgotten password
RESET_PASSWD_CODE_LIVE_MINUTES = {{ service_RESET_PASSWD_CODE_LIVE_MINUTES }}
; Whether a new user needs to confirm their email when registering.
REGISTER_EMAIL_CONFIRM = {{ service_REGISTER_EMAIL_CONFIRM }}
; Disallow registration, only allow admins to create accounts.
DISABLE_REGISTRATION = {{ service_DISABLE_REGISTRATION }}
; Allow registration only using third part services, it works only when DISABLE_REGISTRATION is false
ALLOW_ONLY_EXTERNAL_REGISTRATION = {{ service_ALLOW_ONLY_EXTERNAL_REGISTRATION }}
; User must sign in to view anything.
REQUIRE_SIGNIN_VIEW = {{ service_REQUIRE_SIGNIN_VIEW }}
; Mail notification
ENABLE_NOTIFY_MAIL = {{ service_ENABLE_NOTIFY_MAIL }}
; More detail: https://github.com/gogits/gogs/issues/165
ENABLE_REVERSE_PROXY_AUTHENTICATION = {{ service_ENABLE_REVERSE_PROXY_AUTHENTICATION }}
ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = {{ service_ENABLE_REVERSE_PROXY_AUTO_REGISTRATION }}
; Enable captcha validation for registration
ENABLE_CAPTCHA = {{ service_ENABLE_CAPTCHA }}
; Type of captcha you want to use. Options: image, recaptcha
CAPTCHA_TYPE = {{ service_CAPTCHA_TYPE }}
; Enable recaptcha to use Google's recaptcha service
; Go to https://www.google.com/recaptcha/admin to sign up for a key
RECAPTCHA_SECRET  =
RECAPTCHA_SITEKEY =
; Default value for KeepEmailPrivate
; Each new user will get the value of this setting copied into their profile
DEFAULT_KEEP_EMAIL_PRIVATE = {{ service_DEFAULT_KEEP_EMAIL_PRIVATE }}
; Default value for AllowCreateOrganization
; Every new user will have rights set to create organizations depending on this setting
DEFAULT_ALLOW_CREATE_ORGANIZATION = {{ service_DEFAULT_ALLOW_CREATE_ORGANIZATION }}
; Default value for EnableDependencies
; Repositories will use depencies by default depending on this setting
DEFAULT_ENABLE_DEPENDENCIES = {{ service_DEFAULT_ENABLE_DEPENDENCIES }}
; Enable Timetracking
ENABLE_TIMETRACKING = {{ service_ENABLE_TIMETRACKING }}
; Default value for EnableTimetracking
; Repositories will use timetracking by default depending on this setting
DEFAULT_ENABLE_TIMETRACKING = {{ service_DEFAULT_ENABLE_TIMETRACKING }}
; Default value for AllowOnlyContributorsToTrackTime
; Only users with write permissions can track time if this is true
DEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME = {{ service_DEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME }}
; Default value for the domain part of the user's email address in the git log
; if he has set KeepEmailPrivate to true. The user's email will be replaced with a
; concatenation of the user name in lower case, "@" and NO_REPLY_ADDRESS.
NO_REPLY_ADDRESS = {{ service_NO_REPLY_ADDRESS }}

[webhook]
; Hook task queue length, increase if webhook shooting starts hanging
QUEUE_LENGTH = {{ webhook_QUEUE_LENGTH }}
; Deliver timeout in seconds
DELIVER_TIMEOUT = {{ webhook_DELIVER_TIMEOUT }}
; Allow insecure certification
SKIP_TLS_VERIFY = {{ webhook_SKIP_TLS_VERIFY }}
; Number of history information in each page
PAGING_NUM = {{ webhook_PAGING_NUM }}

[mailer]
ENABLED = {{ mailer_ENABLED }}
; Buffer length of channel, keep it as it is if you don't know what it is.
SEND_BUFFER_LEN = {{ mailer_SEND_BUFFER_LEN }}
; Name displayed in mail title
SUBJECT = {{ mailer_SUBJECT }}
; Mail server
; Gmail: smtp.gmail.com:587
; QQ: smtp.qq.com:465
; Note, if the port ends with "465", SMTPS will be used. Using STARTTLS on port 587 is recommended per RFC 6409. If the server supports STARTTLS it will always be used.
HOST =
; Disable HELO operation when hostnames are different.
DISABLE_HELO =
; Custom hostname for HELO operation, if no value is provided, one is retrieved from system.
HELO_HOSTNAME =
; Do not verify the certificate of the server. Only use this for self-signed certificates
SKIP_VERIFY =
; Use client certificate
USE_CERTIFICATE = {{ mailer_USE_CERTIFICATE }}
CERT_FILE = {{ mailer_CERT_FILE }}
KEY_FILE = {{ mailer_KEY_FILE }}
; Mail from address, RFC 5322. This can be just an email address, or the `"Name" <email@example.com>` format
FROM =
; Mailer user name and password
USER =
; Use PASSWD =
PASSWD =
; Send mails as plain text
SEND_AS_PLAIN_TEXT = {{ mailer_SEND_AS_PLAIN_TEXT }}
; Enable sendmail (override SMTP)
USE_SENDMAIL = {{ mailer_USE_SENDMAIL }}
; Specify an alternative sendmail binary
SENDMAIL_PATH = {{ mailer_SENDMAIL_PATH }}
; Specify any extra sendmail arguments
SENDMAIL_ARGS =

[cache]
; Either "memory", "redis", or "memcache", default is "memory"
ADAPTER = {{ cache_ADAPTER }}
; For "memory" only, GC interval in seconds, default is 60
INTERVAL = {{ cache_INTERVAL }}
; For "redis" and "memcache", connection host address
; redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180
; memcache: `127.0.0.1:11211`
HOST =
; Time to keep items in cache if not used, default is 16 hours.
; Setting it to 0 disables caching
ITEM_TTL = {{ cache_ITEM_TTL }}

[session]
; Either "memory", "file", or "redis", default is "memory"
PROVIDER = {{ session_PROVIDER }}
; Provider config options
; memory: doesn't have any config yet
; file: session file path, e.g. `data/sessions`
; redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180
; mysql: go-sql-driver/mysql dsn config string, e.g. `root:password@/session_table`
PROVIDER_CONFIG = {{ session_PROVIDER_CONFIG }}
; Session cookie name
COOKIE_NAME = {{ session_COOKIE_NAME }}
; If you use session in https only, default is false
COOKIE_SECURE = {{ session_COOKIE_SECURE }}
; Enable set cookie, default is true
ENABLE_SET_COOKIE = {{ session_ENABLE_SET_COOKIE }}
; Session GC time interval in seconds, default is 86400 (1 day)
GC_INTERVAL_TIME = {{ session_GC_INTERVAL_TIME }}
; Session life time in seconds, default is 86400 (1 day)
SESSION_LIFE_TIME = {{ session_SESSION_LIFE_TIME }}

[picture]
AVATAR_UPLOAD_PATH = {{ picture_AVATAR_UPLOAD_PATH }}
; Max Width and Height of uploaded avatars. This is to limit the amount of RAM
; used when resizing the image.
AVATAR_MAX_WIDTH = {{ picture_AVATAR_MAX_WIDTH }}
AVATAR_MAX_HEIGHT = {{ picture_AVATAR_MAX_HEIGHT }}
; Chinese users can choose "duoshuo"
; or a custom avatar source, like: http://cn.gravatar.com/avatar/
GRAVATAR_SOURCE = {{ picture_GRAVATAR_SOURCE }}
; This value will always be true in offline mode.
DISABLE_GRAVATAR = {{ picture_DISABLE_GRAVATAR }}
; Federated avatar lookup uses DNS to discover avatar associated
; with emails, see https://www.libravatar.org
; This value will always be false in offline mode or when Gravatar is disabled.
ENABLE_FEDERATED_AVATAR = {{ picture_ENABLE_FEDERATED_AVATAR }}

[attachment]
; Whether attachments are enabled. Defaults to `true`
ENABLED = {{ attachment_ENABLED }}
; Path for attachments. Defaults to `data/attachments`
PATH = {{ attachment_PATH }}
; One or more allowed types, e.g. image/jpeg|image/png
ALLOWED_TYPES = {{ attachment_ALLOWED_TYPES }}
; Max size of each file. Defaults to 4MB
MAX_SIZE = {{ attachment_MAX_SIZE }}
; Max number of files per upload. Defaults to 5
MAX_FILES = {{ attachment_MAX_FILES }}

[time]
; Specifies the format for fully outputted dates. Defaults to RFC1123
; Special supported values are ANSIC, UnixDate, RubyDate, RFC822, RFC822Z, RFC850, RFC1123, RFC1123Z, RFC3339, RFC3339Nano, Kitchen, Stamp, StampMilli, StampMicro and StampNano
; For more information about the format see http://golang.org/pkg/time/#pkg-constants
FORMAT =

[log]
ROOT_PATH =
; Either "console", "file", "conn", "smtp" or "database", default is "console"
; Use comma to separate multiple modes, e.g. "console, file"
MODE = {{ log_MODE }}
; Buffer length of the channel, keep it as it is if you don't know what it is.
BUFFER_LEN = {{ log_BUFFER_LEN }}
; Either "Trace", "Debug", "Info", "Warn", "Error", "Critical", default is "Trace"
LEVEL = {{ log_LEVEL }}

; For "console" mode only
[log.console]
LEVEL =

; For "file" mode only
[log.file]
LEVEL =
; This enables automated log rotate(switch of following options), default is true
LOG_ROTATE = {{ log_file_LOG_ROTATE }}
; Max number of lines in a single file, default is 1000000
MAX_LINES = {{ log_file_MAX_LINES }}
; Max size shift of a single file, default is 28 means 1 << 28, 256MB
MAX_SIZE_SHIFT = {{ log_file_MAX_SIZE_SHIFT }}
; Segment log daily, default is true
DAILY_ROTATE = {{ log_file_DAILY_ROTATE }}
; delete the log file after n days, default is 7
MAX_DAYS = {{ log_file_MAX_DAYS }}

; For "conn" mode only
[log.conn]
LEVEL =
; Reconnect host for every single message, default is false
RECONNECT_ON_MSG = {{ log_conn_RECONNECT_ON_MSG }}
; Try to reconnect when connection is lost, default is false
RECONNECT = {{ log_conn_RECONNECT }}
; Either "tcp", "unix" or "udp", default is "tcp"
PROTOCOL = {{ log_conn_PROTOCOL }}
; Host address
ADDR =

; For "smtp" mode only
[log.smtp]
LEVEL =
; Name displayed in mail title, default is "Diagnostic message from server"
SUBJECT = {{ log_smtp_SUBJECT }}
; Mail server
HOST =
; Mailer user name and password
USER =
; Use PASSWD =
PASSWD =
; Receivers, can be one or more, e.g. 1@example.com,2@example.com
RECEIVERS =

; For "database" mode only
[log.database]
LEVEL =
; Either "mysql" or "postgres"
DRIVER =
; Based on xorm, e.g.: root:root@localhost/gitea?charset=utf8
CONN =

[cron]
; Enable running cron tasks periodically.
ENABLED = {{ cron_ENABLED }}
; Run cron tasks when Gitea starts.
RUN_AT_START = {{ cron_RUN_AT_START }}

; Update mirrors
[cron.update_mirrors]
SCHEDULE = {{ cron_update_mirrors_SCHEDULE }}

; Repository health check
[cron.repo_health_check]
SCHEDULE = {{ cron_repo_health_check_SCHEDULE }}
TIMEOUT = {{ cron_repo_health_check_TIMEOUT }}
; Arguments for command 'git fsck', e.g. "--unreachable --tags"
; see more on http://git-scm.com/docs/git-fsck/1.7.5
ARGS =

; Check repository statistics
[cron.check_repo_stats]
RUN_AT_START = {{ cron_check_repo_stats_RUN_AT_START }}
SCHEDULE = {{ cron_check_repo_stats_SCHEDULE }}

; Clean up old repository archives
[cron.archive_cleanup]
; Whether to enable the job
ENABLED = {{ cron_archive_cleanup_ENABLED }}
; Whether to always run at least once at start up time (if ENABLED)
RUN_AT_START = {{ cron_archive_cleanup_RUN_AT_START }}
; Time interval for job to run
SCHEDULE = {{ cron_archive_cleanup_SCHEDULE }}
; Archives created more than OLDER_THAN ago are subject to deletion
OLDER_THAN = {{ cron_archive_cleanup_OLDER_THAN }}

; Synchronize external user data (only LDAP user synchronization is supported)
[cron.sync_external_users]
; Synchronize external user data when starting server (default false)
RUN_AT_START = {{ cron_sync_external_users_RUN_AT_START }}
; Interval as a duration between each synchronization (default every 24h)
SCHEDULE = {{ cron_sync_external_users_SCHEDULE }}
; Create new users, update existing user data and disable users that are not in external source anymore (default)
;   or only create new users if UPDATE_EXISTING is set to false
UPDATE_EXISTING = {{ cron_sync_external_users_UPDATE_EXISTING }}

[git]
; Disables highlight of added and removed changes
DISABLE_DIFF_HIGHLIGHT = {{ git_DISABLE_DIFF_HIGHLIGHT }}
; Max number of lines allowed in a single file in diff view
MAX_GIT_DIFF_LINES = {{ git_MAX_GIT_DIFF_LINES }}
; Max number of allowed characters in a line in diff view
MAX_GIT_DIFF_LINE_CHARACTERS = {{ git_MAX_GIT_DIFF_LINE_CHARACTERS }}
; Max number of files shown in diff view
MAX_GIT_DIFF_FILES = {{ git_MAX_GIT_DIFF_FILES }}
; Arguments for command 'git gc', e.g. "--aggressive --auto"
; see more on http://git-scm.com/docs/git-gc/1.7.5
GC_ARGS =

; Operation timeout in seconds
[git.timeout]
MIGRATE = {{ git_timeout_MIGRATE }}
MIRROR = {{ git_timeout_MIRROR }}
CLONE = {{ git_timeout_CLONE }}
PULL = {{ git_timeout_PULL }}
GC = {{ git_timeout_GC }}

[mirror]
; Default interval as a duration between each check
DEFAULT_INTERVAL = {{ mirror_DEFAULT_INTERVAL }}
; Min interval as a duration must be > 1m
MIN_INTERVAL = {{ mirror_MIN_INTERVAL }}

[api]
; Enables Swagger. True or false; default is true.
ENABLE_SWAGGER = {{ api_ENABLE_SWAGGER }}
; Max number of items in a page
MAX_RESPONSE_ITEMS = {{ api_MAX_RESPONSE_ITEMS }}

[i18n]
LANGS = {{ i18n_LANGS }}
NAMES = {{ i18n_NAMES }}

; Used for datetimepicker
[i18n.datelang]
en-US = {{ i18n_datelang_en_US }}
zh-CN = {{ i18n_datelang_zh_CN }}
zh-HK = {{ i18n_datelang_zh_HK }}
zh-TW = {{ i18n_datelang_zh_TW }}
de-DE = {{ i18n_datelang_de_DE }}
fr-FR = {{ i18n_datelang_fr_FR }}
nl-NL = {{ i18n_datelang_nl_NL }}
lv-LV = {{ i18n_datelang_lv_LV }}
ru-RU = {{ i18n_datelang_ru_RU }}
uk-UA = {{ i18n_datelang_uk_UA }}
ja-JP = {{ i18n_datelang_ja_JP }}
es-ES = {{ i18n_datelang_es_ES }}
pt-BR = {{ i18n_datelang_pt_BR }}
pl-PL = {{ i18n_datelang_pl_PL }}
bg-BG = {{ i18n_datelang_bg_BG }}
it-IT = {{ i18n_datelang_it_IT }}
fi-FI = {{ i18n_datelang_fi_FI }}
tr-TR = {{ i18n_datelang_tr_TR }}
cs-CZ = {{ i18n_datelang_cs_CZ }}
sr-SP = {{ i18n_datelang_sr_SP }}
sv-SE = {{ i18n_datelang_sv_SE }}
ko-KR = {{ i18n_datelang_ko_KR }}

[U2F]
; Two Factor authentication with security keys
; https://developers.yubico.com/U2F/App_ID.html
;APP_ID = %(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/
; Comma seperated list of truisted facets
;TRUSTED_FACETS = %(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/

; Extension mapping to highlight class
; e.g. .toml=ini
[highlight.mapping]

[other]
SHOW_FOOTER_BRANDING = {{ other_SHOW_FOOTER_BRANDING }}
; Show version information about Gitea and Go in the footer
SHOW_FOOTER_VERSION = {{ other_SHOW_FOOTER_VERSION }}
; Show template execution time in the footer
SHOW_FOOTER_TEMPLATE_LOAD_TIME = {{ other_SHOW_FOOTER_TEMPLATE_LOAD_TIME }}

[markup.asciidoc]
ENABLED = {{ markup_asciidoc_ENABLED }}
; List of file extensions that should be rendered by an external command
FILE_EXTENSIONS = {{ markup_asciidoc_FILE_EXTENSIONS }}
; External command to render all matching extensions
RENDER_COMMAND = {{ markup_asciidoc_RENDER_COMMAND }}
; Don't pass the file on STDIN, pass the filename as argument instead.
IS_INPUT_FILE = {{ markup_asciidoc_IS_INPUT_FILE }}
